/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
import { NgModule } from "@angular/core";
import { NgArrayPipesModule } from "./array/index";
import { NgObjectPipesModule } from "./object/index";
import { NgStringPipesModule } from "./string/index";
import { NgMathPipesModule } from "./math/index";
import { NgBooleanPipesModule } from "./boolean/index";
var NgPipesModule = /** @class */ (function () {
    function NgPipesModule() {
    }
    NgPipesModule.decorators = [
        { type: NgModule, args: [{
                    exports: [NgArrayPipesModule, NgStringPipesModule, NgMathPipesModule, NgBooleanPipesModule, NgObjectPipesModule],
                },] },
    ];
    return NgPipesModule;
}());
export { NgPipesModule };
export { NgArrayPipesModule, DiffPipe, InitialPipe, FlattenPipe, IntersectionPipe, ReversePipe, TailPipe, TrurthifyPipe, UnionPipe, UniquePipe, WithoutPipe, PluckPipe, ShufflePipe, EveryPipe, SomePipe, SamplePipe, GroupByPipe, FilterByPipe, OrderByPipe, GroupByImpurePipe, FilterByImpurePipe, OrderByImpurePipe, RangePipe } from "./array/index";
export { NgObjectPipesModule, KeysPipe, ValuesPipe, PairsPipe, PickPipe, OmitPipe, InvertPipe, InvertByPipe, DiffObjPipe } from "./object/index";
export { STRING_PIPES, NgStringPipesModule, UcWordsPipe, LeftTrimPipe, RepeatPipe, RightTrimPipe, ScanPipe, ShortenPipe, StripTagsPipe, TrimPipe, UcFirstPipe, SlugifyPipe, CamelizePipe, LatinisePipe, LinesPipe, UnderscorePipe, MatchPipe, TestPipe, LeftPadPipe, RightPadPipe, WrapPipe } from "./string/index";
export { MATH_PIPES, NgMathPipesModule, MaxPipe, MinPipe, PercentagePipe, SumPipe, FloorPipe, RoundPipe, SqrtPipe, PowerPipe, CeilPipe, DegreesPipe, BytesPipe } from "./math/index";
export { BOOLEAN_PIPES, NgBooleanPipesModule, IsDefinedPipe, IsNullPipe, IsUndefinedPipe, IsStringPipe, IsFunctionPipe, IsNumberPipe, IsArrayPipe, IsObjectPipe, IsGreaterEqualThanPipe, IsGreaterThanPipe, IsLessEqualThanPipe, IsEqualToPipe, IsNotEqualToPipe, IsIdenticalToPipe, IsNotIdenticalToPipe, IsLessThanPipe } from "./boolean/index";

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290Ijoibmc6Ly9uZ3gtcGlwZXMvIiwic291cmNlcyI6WyJzcmMvcGlwZXMvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxRQUFRLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDekMsT0FBTyxFQUFFLGtCQUFrQixFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ25ELE9BQU8sRUFBRSxtQkFBbUIsRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBQ3JELE9BQU8sRUFBRSxtQkFBbUIsRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBQ3JELE9BQU8sRUFBRSxpQkFBaUIsRUFBRSxNQUFNLGNBQWMsQ0FBQztBQUNqRCxPQUFPLEVBQUUsb0JBQW9CLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQzs7Ozs7Z0JBRXRELFFBQVEsU0FBQztvQkFDUixPQUFPLEVBQUUsQ0FBQyxrQkFBa0IsRUFBRSxtQkFBbUIsRUFBRSxpQkFBaUIsRUFBRSxvQkFBb0IsRUFBRSxtQkFBbUIsQ0FBQztpQkFDakg7O3dCQVREOztTQVVhLGFBQWE7QUFFMUIseVVBQWMsZUFBZSxDQUFDO0FBQzlCLGdJQUFjLGdCQUFnQixDQUFDO0FBQy9CLG1TQUFjLGdCQUFnQixDQUFDO0FBQy9CLHNLQUFjLGNBQWMsQ0FBQztBQUM3QixpVUFBYyxpQkFBaUIsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE5nTW9kdWxlIH0gZnJvbSBcIkBhbmd1bGFyL2NvcmVcIjtcbmltcG9ydCB7IE5nQXJyYXlQaXBlc01vZHVsZSB9IGZyb20gXCIuL2FycmF5L2luZGV4XCI7XG5pbXBvcnQgeyBOZ09iamVjdFBpcGVzTW9kdWxlIH0gZnJvbSBcIi4vb2JqZWN0L2luZGV4XCI7XG5pbXBvcnQgeyBOZ1N0cmluZ1BpcGVzTW9kdWxlIH0gZnJvbSBcIi4vc3RyaW5nL2luZGV4XCI7XG5pbXBvcnQgeyBOZ01hdGhQaXBlc01vZHVsZSB9IGZyb20gXCIuL21hdGgvaW5kZXhcIjtcbmltcG9ydCB7IE5nQm9vbGVhblBpcGVzTW9kdWxlIH0gZnJvbSBcIi4vYm9vbGVhbi9pbmRleFwiO1xuXG5ATmdNb2R1bGUoe1xuICBleHBvcnRzOiBbTmdBcnJheVBpcGVzTW9kdWxlLCBOZ1N0cmluZ1BpcGVzTW9kdWxlLCBOZ01hdGhQaXBlc01vZHVsZSwgTmdCb29sZWFuUGlwZXNNb2R1bGUsIE5nT2JqZWN0UGlwZXNNb2R1bGVdLFxufSlcbmV4cG9ydCBjbGFzcyBOZ1BpcGVzTW9kdWxlIHt9XG5cbmV4cG9ydCAqIGZyb20gXCIuL2FycmF5L2luZGV4XCI7XG5leHBvcnQgKiBmcm9tIFwiLi9vYmplY3QvaW5kZXhcIjtcbmV4cG9ydCAqIGZyb20gXCIuL3N0cmluZy9pbmRleFwiO1xuZXhwb3J0ICogZnJvbSBcIi4vbWF0aC9pbmRleFwiO1xuZXhwb3J0ICogZnJvbSBcIi4vYm9vbGVhbi9pbmRleFwiO1xuIl19