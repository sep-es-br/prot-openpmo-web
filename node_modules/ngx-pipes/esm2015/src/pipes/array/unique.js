/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
import { Pipe } from "@angular/core";
import { extractDeepPropertyByMapKey, isObject, isUndefined } from "../helpers/helpers";
export class UniquePipe {
    /**
     * @param {?} input
     * @param {?=} propertyName
     * @return {?}
     */
    transform(input, propertyName) {
        const /** @type {?} */ uniques = [];
        return Array.isArray(input)
            ? isUndefined(propertyName)
                ? input.filter((e, i) => input.indexOf(e) === i)
                : input.filter((e, i) => {
                    let /** @type {?} */ value = extractDeepPropertyByMapKey(e, propertyName);
                    value = isObject(value) ? JSON.stringify(value) : value;
                    if (isUndefined(value) || uniques[value]) {
                        return false;
                    }
                    uniques[value] = true;
                    return true;
                })
            : input;
    }
}
UniquePipe.decorators = [
    { type: Pipe, args: [{ name: "unique" },] },
];

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidW5pcXVlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vbmd4LXBpcGVzLyIsInNvdXJjZXMiOlsic3JjL3BpcGVzL2FycmF5L3VuaXF1ZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLElBQUksRUFBaUIsTUFBTSxlQUFlLENBQUM7QUFDcEQsT0FBTyxFQUFFLDJCQUEyQixFQUFFLFFBQVEsRUFBRSxXQUFXLEVBQUUsTUFBTSxvQkFBb0IsQ0FBQztBQUd4RixNQUFNOzs7Ozs7SUFJSixTQUFTLENBQUMsS0FBVSxFQUFFLFlBQWlDO1FBQ3JELHVCQUFNLE9BQU8sR0FBYyxFQUFFLENBQUM7UUFFOUIsTUFBTSxDQUFDLEtBQUssQ0FBQyxPQUFPLENBQUMsS0FBSyxDQUFDO1lBQ3pCLENBQUMsQ0FBQyxXQUFXLENBQUMsWUFBWSxDQUFDO2dCQUN6QixDQUFDLENBQUMsS0FBSyxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsRUFBRSxDQUFDLEtBQUssQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDLEtBQUssQ0FBQyxDQUFDO2dCQUNoRCxDQUFDLENBQUMsS0FBSyxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsRUFBRTtvQkFDcEIscUJBQUksS0FBSyxHQUFHLDJCQUEyQixDQUFDLENBQUMsRUFBRSxZQUFZLENBQUMsQ0FBQztvQkFDekQsS0FBSyxHQUFHLFFBQVEsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUMsS0FBSyxDQUFDO29CQUV4RCxFQUFFLENBQUMsQ0FBQyxXQUFXLENBQUMsS0FBSyxDQUFDLElBQUksT0FBTyxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQzt3QkFDekMsTUFBTSxDQUFDLEtBQUssQ0FBQztxQkFDZDtvQkFFRCxPQUFPLENBQUMsS0FBSyxDQUFDLEdBQUcsSUFBSSxDQUFDO29CQUV0QixNQUFNLENBQUMsSUFBSSxDQUFDO2lCQUNiLENBQUM7WUFDTixDQUFDLENBQUMsS0FBSyxDQUFDO0tBQ1g7OztZQXhCRixJQUFJLFNBQUMsRUFBRSxJQUFJLEVBQUUsUUFBUSxFQUFFIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUGlwZSwgUGlwZVRyYW5zZm9ybSB9IGZyb20gXCJAYW5ndWxhci9jb3JlXCI7XG5pbXBvcnQgeyBleHRyYWN0RGVlcFByb3BlcnR5QnlNYXBLZXksIGlzT2JqZWN0LCBpc1VuZGVmaW5lZCB9IGZyb20gXCIuLi9oZWxwZXJzL2hlbHBlcnNcIjtcblxuQFBpcGUoeyBuYW1lOiBcInVuaXF1ZVwiIH0pXG5leHBvcnQgY2xhc3MgVW5pcXVlUGlwZSBpbXBsZW1lbnRzIFBpcGVUcmFuc2Zvcm0ge1xuICB0cmFuc2Zvcm0oaW5wdXQ6IGFueVtdLCBhcmdzPzogc3RyaW5nIHwgdW5kZWZpbmVkKTogYW55W107XG4gIHRyYW5zZm9ybTxUPihpbnB1dDogVCwgYXJncz86IHN0cmluZyB8IHVuZGVmaW5lZCk6IFQ7XG5cbiAgdHJhbnNmb3JtKGlucHV0OiBhbnksIHByb3BlcnR5TmFtZT86IHN0cmluZyB8IHVuZGVmaW5lZCk6IGFueSB7XG4gICAgY29uc3QgdW5pcXVlczogYm9vbGVhbltdID0gW107XG5cbiAgICByZXR1cm4gQXJyYXkuaXNBcnJheShpbnB1dClcbiAgICAgID8gaXNVbmRlZmluZWQocHJvcGVydHlOYW1lKVxuICAgICAgICA/IGlucHV0LmZpbHRlcigoZSwgaSkgPT4gaW5wdXQuaW5kZXhPZihlKSA9PT0gaSlcbiAgICAgICAgOiBpbnB1dC5maWx0ZXIoKGUsIGkpID0+IHtcbiAgICAgICAgICAgIGxldCB2YWx1ZSA9IGV4dHJhY3REZWVwUHJvcGVydHlCeU1hcEtleShlLCBwcm9wZXJ0eU5hbWUpO1xuICAgICAgICAgICAgdmFsdWUgPSBpc09iamVjdCh2YWx1ZSkgPyBKU09OLnN0cmluZ2lmeSh2YWx1ZSkgOiB2YWx1ZTtcblxuICAgICAgICAgICAgaWYgKGlzVW5kZWZpbmVkKHZhbHVlKSB8fCB1bmlxdWVzW3ZhbHVlXSkge1xuICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIHVuaXF1ZXNbdmFsdWVdID0gdHJ1ZTtcblxuICAgICAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICAgICAgfSlcbiAgICAgIDogaW5wdXQ7XG4gIH1cbn1cbiJdfQ==