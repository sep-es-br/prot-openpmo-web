/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
import { NgModule } from "@angular/core";
import { MaxPipe } from "./max";
import { MinPipe } from "./min";
import { PercentagePipe } from "./percentage";
import { SumPipe } from "./sum";
import { FloorPipe } from "./floor";
import { RoundPipe } from "./round";
import { SqrtPipe } from "./sqrt";
import { PowerPipe } from "./pow";
import { CeilPipe } from "./ceil";
import { DegreesPipe } from "./degrees";
import { BytesPipe } from "./bytes";
import { RadiansPipe } from "./radians";
export const /** @type {?} */ MATH_PIPES = [
    MaxPipe,
    MinPipe,
    PercentagePipe,
    SumPipe,
    FloorPipe,
    RoundPipe,
    SqrtPipe,
    PowerPipe,
    CeilPipe,
    DegreesPipe,
    BytesPipe,
    RadiansPipe,
];
export class NgMathPipesModule {
}
NgMathPipesModule.decorators = [
    { type: NgModule, args: [{
                declarations: MATH_PIPES,
                imports: [],
                exports: MATH_PIPES,
            },] },
];
export { MaxPipe } from "./max";
export { MinPipe } from "./min";
export { PercentagePipe } from "./percentage";
export { SumPipe } from "./sum";
export { FloorPipe } from "./floor";
export { RoundPipe } from "./round";
export { SqrtPipe } from "./sqrt";
export { PowerPipe } from "./pow";
export { CeilPipe } from "./ceil";
export { DegreesPipe } from "./degrees";
export { BytesPipe } from "./bytes";

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290Ijoibmc6Ly9uZ3gtcGlwZXMvIiwic291cmNlcyI6WyJzcmMvcGlwZXMvbWF0aC9pbmRleC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLFFBQVEsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUN6QyxPQUFPLEVBQUUsT0FBTyxFQUFFLE1BQU0sT0FBTyxDQUFDO0FBQ2hDLE9BQU8sRUFBRSxPQUFPLEVBQUUsTUFBTSxPQUFPLENBQUM7QUFDaEMsT0FBTyxFQUFFLGNBQWMsRUFBRSxNQUFNLGNBQWMsQ0FBQztBQUM5QyxPQUFPLEVBQUUsT0FBTyxFQUFFLE1BQU0sT0FBTyxDQUFDO0FBQ2hDLE9BQU8sRUFBRSxTQUFTLEVBQUUsTUFBTSxTQUFTLENBQUM7QUFDcEMsT0FBTyxFQUFFLFNBQVMsRUFBRSxNQUFNLFNBQVMsQ0FBQztBQUNwQyxPQUFPLEVBQUUsUUFBUSxFQUFFLE1BQU0sUUFBUSxDQUFDO0FBQ2xDLE9BQU8sRUFBRSxTQUFTLEVBQUUsTUFBTSxPQUFPLENBQUM7QUFDbEMsT0FBTyxFQUFFLFFBQVEsRUFBRSxNQUFNLFFBQVEsQ0FBQztBQUNsQyxPQUFPLEVBQUUsV0FBVyxFQUFFLE1BQU0sV0FBVyxDQUFDO0FBQ3hDLE9BQU8sRUFBRSxTQUFTLEVBQUUsTUFBTSxTQUFTLENBQUM7QUFDcEMsT0FBTyxFQUFFLFdBQVcsRUFBRSxNQUFNLFdBQVcsQ0FBQztBQUV4QyxNQUFNLENBQUMsdUJBQU0sVUFBVSxHQUFHO0lBQ3hCLE9BQU87SUFDUCxPQUFPO0lBQ1AsY0FBYztJQUNkLE9BQU87SUFDUCxTQUFTO0lBQ1QsU0FBUztJQUNULFFBQVE7SUFDUixTQUFTO0lBQ1QsUUFBUTtJQUNSLFdBQVc7SUFDWCxTQUFTO0lBQ1QsV0FBVztDQUNaLENBQUM7QUFPRixNQUFNOzs7WUFMTCxRQUFRLFNBQUM7Z0JBQ1IsWUFBWSxFQUFFLFVBQVU7Z0JBQ3hCLE9BQU8sRUFBRSxFQUFFO2dCQUNYLE9BQU8sRUFBRSxVQUFVO2FBQ3BCOztBQUdELE9BQU8sRUFBRSxPQUFPLEVBQUUsTUFBTSxPQUFPLENBQUM7QUFDaEMsT0FBTyxFQUFFLE9BQU8sRUFBRSxNQUFNLE9BQU8sQ0FBQztBQUNoQyxPQUFPLEVBQUUsY0FBYyxFQUFFLE1BQU0sY0FBYyxDQUFDO0FBQzlDLE9BQU8sRUFBRSxPQUFPLEVBQUUsTUFBTSxPQUFPLENBQUM7QUFDaEMsT0FBTyxFQUFFLFNBQVMsRUFBRSxNQUFNLFNBQVMsQ0FBQztBQUNwQyxPQUFPLEVBQUUsU0FBUyxFQUFFLE1BQU0sU0FBUyxDQUFDO0FBQ3BDLE9BQU8sRUFBRSxRQUFRLEVBQUUsTUFBTSxRQUFRLENBQUM7QUFDbEMsT0FBTyxFQUFFLFNBQVMsRUFBRSxNQUFNLE9BQU8sQ0FBQztBQUNsQyxPQUFPLEVBQUUsUUFBUSxFQUFFLE1BQU0sUUFBUSxDQUFDO0FBQ2xDLE9BQU8sRUFBRSxXQUFXLEVBQUUsTUFBTSxXQUFXLENBQUM7QUFDeEMsT0FBTyxFQUFFLFNBQVMsRUFBRSxNQUFNLFNBQVMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE5nTW9kdWxlIH0gZnJvbSBcIkBhbmd1bGFyL2NvcmVcIjtcbmltcG9ydCB7IE1heFBpcGUgfSBmcm9tIFwiLi9tYXhcIjtcbmltcG9ydCB7IE1pblBpcGUgfSBmcm9tIFwiLi9taW5cIjtcbmltcG9ydCB7IFBlcmNlbnRhZ2VQaXBlIH0gZnJvbSBcIi4vcGVyY2VudGFnZVwiO1xuaW1wb3J0IHsgU3VtUGlwZSB9IGZyb20gXCIuL3N1bVwiO1xuaW1wb3J0IHsgRmxvb3JQaXBlIH0gZnJvbSBcIi4vZmxvb3JcIjtcbmltcG9ydCB7IFJvdW5kUGlwZSB9IGZyb20gXCIuL3JvdW5kXCI7XG5pbXBvcnQgeyBTcXJ0UGlwZSB9IGZyb20gXCIuL3NxcnRcIjtcbmltcG9ydCB7IFBvd2VyUGlwZSB9IGZyb20gXCIuL3Bvd1wiO1xuaW1wb3J0IHsgQ2VpbFBpcGUgfSBmcm9tIFwiLi9jZWlsXCI7XG5pbXBvcnQgeyBEZWdyZWVzUGlwZSB9IGZyb20gXCIuL2RlZ3JlZXNcIjtcbmltcG9ydCB7IEJ5dGVzUGlwZSB9IGZyb20gXCIuL2J5dGVzXCI7XG5pbXBvcnQgeyBSYWRpYW5zUGlwZSB9IGZyb20gXCIuL3JhZGlhbnNcIjtcblxuZXhwb3J0IGNvbnN0IE1BVEhfUElQRVMgPSBbXG4gIE1heFBpcGUsXG4gIE1pblBpcGUsXG4gIFBlcmNlbnRhZ2VQaXBlLFxuICBTdW1QaXBlLFxuICBGbG9vclBpcGUsXG4gIFJvdW5kUGlwZSxcbiAgU3FydFBpcGUsXG4gIFBvd2VyUGlwZSxcbiAgQ2VpbFBpcGUsXG4gIERlZ3JlZXNQaXBlLFxuICBCeXRlc1BpcGUsXG4gIFJhZGlhbnNQaXBlLFxuXTtcblxuQE5nTW9kdWxlKHtcbiAgZGVjbGFyYXRpb25zOiBNQVRIX1BJUEVTLFxuICBpbXBvcnRzOiBbXSxcbiAgZXhwb3J0czogTUFUSF9QSVBFUyxcbn0pXG5leHBvcnQgY2xhc3MgTmdNYXRoUGlwZXNNb2R1bGUge31cblxuZXhwb3J0IHsgTWF4UGlwZSB9IGZyb20gXCIuL21heFwiO1xuZXhwb3J0IHsgTWluUGlwZSB9IGZyb20gXCIuL21pblwiO1xuZXhwb3J0IHsgUGVyY2VudGFnZVBpcGUgfSBmcm9tIFwiLi9wZXJjZW50YWdlXCI7XG5leHBvcnQgeyBTdW1QaXBlIH0gZnJvbSBcIi4vc3VtXCI7XG5leHBvcnQgeyBGbG9vclBpcGUgfSBmcm9tIFwiLi9mbG9vclwiO1xuZXhwb3J0IHsgUm91bmRQaXBlIH0gZnJvbSBcIi4vcm91bmRcIjtcbmV4cG9ydCB7IFNxcnRQaXBlIH0gZnJvbSBcIi4vc3FydFwiO1xuZXhwb3J0IHsgUG93ZXJQaXBlIH0gZnJvbSBcIi4vcG93XCI7XG5leHBvcnQgeyBDZWlsUGlwZSB9IGZyb20gXCIuL2NlaWxcIjtcbmV4cG9ydCB7IERlZ3JlZXNQaXBlIH0gZnJvbSBcIi4vZGVncmVlc1wiO1xuZXhwb3J0IHsgQnl0ZXNQaXBlIH0gZnJvbSBcIi4vYnl0ZXNcIjtcbiJdfQ==