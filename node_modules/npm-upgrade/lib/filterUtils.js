'use strict';

exports.__esModule = true;
exports.globToRegexp = globToRegexp;
exports.makeFilterFunction = makeFilterFunction;

var _lodash = require('lodash');

var _lodash2 = _interopRequireDefault(_lodash);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function globToRegexp(glob, flags) {
  const regexp = glob.split(/\*+/).map(_lodash2.default.escapeRegExp).join('.*?');

  return new RegExp(`^${regexp}$`, flags);
}

function makeFilterFunction(filterStr = '') {
  var _$split$compact$parti = (0, _lodash2.default)(filterStr).split(/\s+/).compact().partition(filter => filter[0] === '!').valueOf();

  let excludeFilters = _$split$compact$parti[0],
      includeFilters = _$split$compact$parti[1];


  if (!includeFilters.length) {
    includeFilters.push('*');
  }

  includeFilters = (0, _lodash2.default)(includeFilters).map(filter => globToRegexp(filter, 'i')).map(filterRegexp => str => filterRegexp.test(str));

  excludeFilters = (0, _lodash2.default)(excludeFilters).map(filter => globToRegexp(filter.slice(1), 'i')).map(filterRegexp => str => filterRegexp.test(str));

  return str => excludeFilters.every(filter => !filter(str)) && includeFilters.some(filter => filter(str));
}