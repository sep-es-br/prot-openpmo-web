'use strict';

exports.__esModule = true;
exports.handler = exports.describe = exports.command = undefined;

var _asyncToGenerator2 = require('babel-runtime/helpers/asyncToGenerator');

var _asyncToGenerator3 = _interopRequireDefault(_asyncToGenerator2);

var _opener = require('opener');

var _opener2 = _interopRequireDefault(_opener);

var _catchAsyncError = require('../catchAsyncError');

var _catchAsyncError2 = _interopRequireDefault(_catchAsyncError);

var _changelogUtils = require('../changelogUtils');

var _cliStyles = require('../cliStyles');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

const pkg = require('../../package.json');

const command = exports.command = 'changelog <moduleName>';
const describe = exports.describe = 'Show changelog for a module';

const handler = exports.handler = (0, _catchAsyncError2.default)((() => {
  var _ref = (0, _asyncToGenerator3.default)(function* (opts) {
    const moduleName = opts.moduleName;


    console.log(`Trying to find changelog URL for ${(0, _cliStyles.strong)(moduleName)}...`);
    let changelogUrl;
    try {
      changelogUrl = yield (0, _changelogUtils.findModuleChangelogUrl)(moduleName);
    } catch (err) {
      if (err.code === 'E404') {
        console.log("Couldn't find info about this module in npm registry");
        return;
      }
    }

    if (changelogUrl) {
      console.log(`Opening ${(0, _cliStyles.strong)(changelogUrl)}...`);
      (0, _opener2.default)(changelogUrl);
    } else {
      console.log("Sorry, we haven't found any changelog URL for this module.\n" + `It would be great if you could fill an issue about this here: ${(0, _cliStyles.strong)(pkg.bugs.url)}\n` + 'Thanks a lot!');
    }
  });

  return function (_x) {
    return _ref.apply(this, arguments);
  };
})());