'use strict';

exports.__esModule = true;
exports.askIgnoreFields = exports.builder = exports.describe = exports.command = undefined;

var _asyncToGenerator2 = require('babel-runtime/helpers/asyncToGenerator');

var _asyncToGenerator3 = _interopRequireDefault(_asyncToGenerator2);

let askIgnoreFields = exports.askIgnoreFields = (() => {
  var _ref = (0, _asyncToGenerator3.default)(function* (defaultVersions) {
    return {
      versions: yield (0, _askUser2.default)({
        message: 'Input version or version range to ignore',
        default: defaultVersions,
        validate: function validate(input) {
          return _semver2.default.validRange(input) ? true : 'Input valid semver version range';
        }
      }),
      reason: yield (0, _askUser2.default)({ message: 'Ignore reason' })
    };
  });

  return function askIgnoreFields(_x) {
    return _ref.apply(this, arguments);
  };
})();

exports.createIgnoredModulesTable = createIgnoredModulesTable;

var _lodash = require('lodash');

var _lodash2 = _interopRequireDefault(_lodash);

var _semver = require('semver');

var _semver2 = _interopRequireDefault(_semver);

var _askUser = require('../askUser');

var _askUser2 = _interopRequireDefault(_askUser);

var _cliTable = require('../cliTable');

var _cliStyles = require('../cliStyles');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

const command = exports.command = 'ignore <command>';
const describe = exports.describe = 'Manage ignored modules';
const builder = exports.builder = yargs => yargs.commandDir('ignore').demandCommand(1, 'Provide valid command');

function createIgnoredModulesTable(ignoredModulesConfig, moduleNames = _lodash2.default.keys(ignoredModulesConfig)) {
  const rows = moduleNames.map(moduleName => [(0, _cliStyles.strong)(moduleName), (0, _cliStyles.attention)(ignoredModulesConfig[moduleName].versions), ignoredModulesConfig[moduleName].reason]);

  // Table header
  rows.unshift(['', 'Ignored versions', 'Reason'].map(header => (0, _cliStyles.strong)(header)));

  return (0, _cliTable.createSimpleTable)(rows, { colAligns: 'lcl' });
}